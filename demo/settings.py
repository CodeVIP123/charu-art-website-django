"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 4.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants as messages
from cryptography.fernet import Fernet
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
dot_env_path = BASE_DIR / ".env"

with open(BASE_DIR / "key.key", "rb") as key_file:
    key = key_file.read()

if dot_env_path.exists():
    load_dotenv(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = Fernet(key).decrypt(os.environ.get("DJANGO_KEY_FOR_CHARU_ART_WEBSITE").encode("utf-8")).decode('utf-8')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['https://charucanvasartwebsite.onrender.com', 'charucanvasartwebsite.com', 'www.charucanvasartwebsite.com']


# Application definition

INSTALLED_APPS = [
    'home.apps.HomeConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Add this line
    # ... other middleware
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'demo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles' # This is where collectstatic will gather files

# Optional: Add this for WhiteNoise to handle static files from apps
STATICFILES_DIRS = [
    BASE_DIR / 'static', # If you have a 'static' folder at your project root
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = Fernet(key).decrypt(os.environ.get("EMAIL_HOST").encode("utf-8")).decode('utf-8')
EMAIL_PORT = Fernet(key).decrypt(os.environ.get("EMAIL_PORT").encode("utf-8")).decode('utf-8')
EMAIL_USE_TLS = True
EMAIL_HOST_USER = Fernet(key).decrypt(os.environ.get("SENDER_EMAIL_FOR_SMTPLIB").encode("utf-8")).decode('utf-8')
EMAIL_HOST_PASSWORD = Fernet(key).decrypt(os.environ.get("SENDER_PASS_FOR_SMTPLIB").encode("utf-8")).decode('utf-8')
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = f"{Fernet(key).decrypt(os.environ.get("DEFAULT_FROM_EMAIL").encode("utf-8")).decode('utf-8')} {EMAIL_HOST_USER}"
ACCOUNT_EMAIL_SUBJECT_PREFIX = ''
RECEIVER_EMAIL = Fernet(key).decrypt(os.environ.get("RECEIVER_EMAIL_FOR_CHARU_ART_WEBSITE").encode("utf-8")).decode('utf-8')
RECEIVER_EMAIL_FOR_CONTACT_FORM = Fernet(key).decrypt(os.environ.get("RECEIVER_EMAIL_FOR_CONTACT_CHARU_ART_WEBSITE").encode("utf-8")).decode('utf-8')
TEACHER_CONTACT_NUMBER = Fernet(key).decrypt(os.environ.get("PHONE_NUMBER_CONTACT_CHARU_ART_WEBSITE").encode("utf-8")).decode('utf-8')
